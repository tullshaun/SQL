Full Diagnostic and Remediation Plan
üîπ Phase 1: Understand the Current Cluster State
‚úÖ Step 1: Confirm Cluster Health
On either SQL node, open PowerShell as Administrator and run:

powershell
Copy
Edit
Get-ClusterNode | Select Name, State, NodeWeight, DynamicWeight
‚úÖ Expected:

Both nodes show State = Up, NodeWeight = 1, DynamicWeight = 1

If any node has NodeWeight = 0 or DynamicWeight = 0, it's not participating in quorum.

‚úÖ Step 2: Check Quorum Configuration
Run:

powershell
Copy
Edit
Get-ClusterQuorum
‚úÖ Expected:

QuorumType should be NodeAndFileShareMajority

QuorumResource should point to the FSW path

If it's showing something unusual (like FileShareMajority), the cluster may be misconfigured.

‚úÖ Step 3: Check Cluster Dynamic Quorum Settings
Run:

powershell
Copy
Edit
(Get-Cluster).DynamicQuorum
(Get-Cluster).DynamicWitness
‚úÖ Expected:

DynamicQuorum = True (default)

DynamicWitness = True (FSW vote adjusts automatically)

Optional:

powershell
Copy
Edit
(Get-Cluster).QuorumArbitrationTimeMax
This tells how long (in seconds) the cluster waits before declaring quorum lost after communication drops.

üîπ Phase 2: Check for Historical Failures
‚úÖ Step 4: Examine Event Logs
On both SQL nodes:

Open Event Viewer

Navigate to:

Windows Logs > System

Applications and Services Logs > Microsoft > Windows > FailoverClustering > Operational

Filter for critical, error, or warning events during the timeframe the FSW went down.

üîç Look for:

Event IDs like 1177, 1561, 1146, 1205, 1069

Messages about quorum loss, resource failure, or cluster communication issues

‚úÖ Step 5: Review Cluster Validation
Open Failover Cluster Manager:

Right-click the cluster > Validate Cluster

Run full validation

Focus on:

Network

Quorum Configuration

System Configuration

üîπ Phase 3: Test and Mitigate
‚úÖ Step 6: Simulate FSW Loss (optional but valuable)
Do this in a maintenance window:

Stop the File Share Witness server (or disable the share)

Observe:

Do the SQL nodes remain up?

Does the AG stay online?

Run:

powershell
Copy
Edit
Get-ClusterGroup
Confirm all cluster groups and the AG role remain in Online state

If they go offline ‚Üí something's still wrong with quorum/voting on a node.

‚úÖ Step 7: Restart Cluster Service (if needed)
If a node is behaving oddly (low weight or unresponsive):

powershell
Copy
Edit
Stop-Service clussvc
Start-Service clussvc
‚ö†Ô∏è Only do this on one node at a time, and preferably during maintenance hours.

‚úÖ Step 8: Reconfigure Quorum (if needed)
If quorum settings or witness are incorrect:

Open Failover Cluster Manager

Go to More Actions > Configure Cluster Quorum Settings

Choose ‚ÄúAdvanced quorum configuration‚Äù and:

Ensure both nodes have votes

Ensure File Share Witness is correctly configured

üîπ Phase 4: Harden the Configuration
‚úÖ Step 9: Update OS and Drivers
Ensure:

Windows Updates are current

Network and storage drivers are up to date

Cluster-aware updates are applied

‚úÖ Step 10: Document Current Cluster Setup
Record:

Output of Get-ClusterNode, Get-ClusterQuorum

Witness location and share permissions

Voting configuration

Event IDs if issue recurs

üìå Optional Preventative Measures
Add a Cloud Witness as a secondary option (esp. for DR scenarios)

Enable Cluster Log Collection for easier future analysis:

powershell
Copy
Edit
Get-ClusterLog -UseLocalTime -Destination C:\ClusterLogs
‚úÖ Summary: What to Focus On

Focus Area	Why It Matters
NodeWeight & DynamicWeight	Tells if nodes are actively voting
Quorum Type	Ensures correct majority behavior
Event Logs	Reveal hidden or transient issues
Cluster Service Health	Nodes may appear ‚Äúup‚Äù but not functional
Validation Tests	Highlight misconfiguration or instability


###########################################################################################script##########################################


# Run this on one of the SQL nodes as Administrator

Write-Host "`n=== SQL Always On Cluster Health Diagnostics ===`n" -ForegroundColor Cyan

# Step 1: Get Cluster Node Voting Info
Write-Host "`n-- Cluster Node Status --`n" -ForegroundColor Yellow
$nodes = Get-ClusterNode | Select Name, State, NodeWeight, DynamicWeight

foreach ($node in $nodes) {
    $status = if ($node.State -eq "Up" -and $node.NodeWeight -eq 1 -and $node.DynamicWeight -eq 1) {"‚úÖ GOOD"} else {"‚ùå CHECK"}
    Write-Host "$($node.Name): State=$($node.State), NodeWeight=$($node.NodeWeight), DynamicWeight=$($node.DynamicWeight) => $status"
}

# Step 2: Get Quorum Configuration
Write-Host "`n-- Quorum Configuration --`n" -ForegroundColor Yellow
$quorum = Get-ClusterQuorum
Write-Host "Quorum Type: $($quorum.QuorumType)"
Write-Host "Quorum Resource: $($quorum.QuorumResource)"

if ($quorum.QuorumType -like "*FileShare*" -and $quorum.QuorumResource) {
    Write-Host "‚úÖ Quorum type is using File Share Witness and resource is defined." -ForegroundColor Green
} else {
    Write-Host "‚ùå Quorum type is not configured correctly or missing witness." -ForegroundColor Red
}

# Step 3: Dynamic Quorum and Witness
Write-Host "`n-- Dynamic Quorum Settings --`n" -ForegroundColor Yellow
$cluster = Get-Cluster
Write-Host "DynamicQuorum: $($cluster.DynamicQuorum)"
Write-Host "DynamicWitness: $($cluster.DynamicWitness)"

if ($cluster.DynamicQuorum -eq $true -and $cluster.DynamicWitness -eq $true) {
    Write-Host "‚úÖ Dynamic quorum and witness are enabled." -ForegroundColor Green
} else {
    Write-Host "‚ùå Dynamic quorum or witness is disabled ‚Äî may lead to instability." -ForegroundColor Red
}

# Step 4: Quorum Arbitration Time
Write-Host "`n-- Quorum Arbitration Timeout --`n" -ForegroundColor Yellow
$arbitrationTime = $cluster.QuorumArbitrationTimeMax
Write-Host "QuorumArbitrationTimeMax: $arbitrationTime seconds"
if ($arbitrationTime -ge 60) {
    Write-Host "‚úÖ Adequate timeout for quorum arbitration." -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è Timeout may be too short for transient failures." -ForegroundColor DarkYellow
}

# Step 5: Cluster Group Status
Write-Host "`n-- Cluster Group Status --`n" -ForegroundColor Yellow
$groups = Get-ClusterGroup
foreach ($g in $groups) {
    $groupStatus = if ($g.State -eq "Online") {"‚úÖ Online"} else {"‚ùå Offline"}
    Write-Host "$($g.Name): $($g.State) => $groupStatus"
}

# Step 6: List Recent Cluster Errors
Write-Host "`n-- Recent Cluster Events (Last 1 Day) --`n" -ForegroundColor Yellow
Get-WinEvent -LogName "Microsoft-Windows-FailoverClustering/Operational" -MaxEvents 20 |
    Where-Object { $_.TimeCreated -gt (Get-Date).AddDays(-1) } |
    Format-Table TimeCreated, Id, LevelDisplayName, Message -AutoSize

Write-Host "`n=== Diagnostics Complete ===`n" -ForegroundColor Cyan

#########################################################################
Save the script as Check-AlwaysOnCluster.ps1

###########################################################################

If You Want to Save the Output to a File
You should wrap the whole script between Start-Transcript and Stop-Transcript. That means:

Start-Transcript goes at the top of the script

Stop-Transcript goes at the bottom

‚úÖ Correct Placement Example:
powershell
Copy
Edit
# START OF SCRIPT

Start-Transcript -Path "C:\ClusterDiagnostics\ClusterReport.txt" -Append

Write-Host "`n=== SQL Always On Cluster Health Diagnostics ===`n" -ForegroundColor Cyan

# ... [All your diagnostic checks go here] ...

Write-Host "`n=== Diagnostics Complete ===`n" -ForegroundColor Cyan

Stop-Transcript

# END OF SCRIPT
üìÅ What It Does:
Captures everything printed to the console (including Write-Host) and saves it in ClusterReport.txt.

The -Append flag allows it to add to the file if you run it multiple times.

#####################################################################################################################################





Clus

if all the quorum members (Node1, Node2, and the FSW) are online and communicating, there should be no issue. The databases going offline only when the File Share Witness goes down, while both nodes remain up, points to something wrong with how quorum voting or cluster membership is being handled.

So let‚Äôs drill deeper with that in mind.

üß† Here's the core logic of what you're observing:
‚úÖ All nodes and FSW online ‚Üí everything works fine.

‚ùå FSW goes offline (nodes still online) ‚Üí Always On databases go offline.

That shouldn‚Äôt happen in a healthy 2-node cluster with FSW ‚Äî because quorum only requires any 2 out of 3 votes.

üß© So what‚Äôs the likely cause?
‚úÖ Yes, they can ping and see each other ‚Äî but cluster voting and membership isn't just about connectivity.
There are more subtle causes that could lead to what you're seeing:

üîç Top 3 Most Likely Issues Given This Behavior
1. One Node Is Not Voting (Down or Removed From Quorum)
Even if it's online, it might be:

Marked as IsExcludedFromQuorum = True

Not actively participating in the vote (e.g., due to transient failure or heartbeat issue)

Cluster sees it as ‚Äúup‚Äù but not contributing to quorum

üß™ Run this:

powershell
Copy
Edit
Get-ClusterNode | Select Name, State, DynamicWeight, NodeWeight
NodeWeight = 1 = eligible to vote

If a node shows NodeWeight = 0, it's not voting, so you‚Äôre actually down to 1 vote + FSW

When FSW goes offline ‚Üí only 1 vote ‚Üí quorum lost

2. Dynamic Quorum Rebalanced Incorrectly (Due to Previous Outage)
If you had a previous incident where one node briefly dropped, dynamic quorum may have rebalanced votes:

Cluster may have disabled one node‚Äôs vote to preserve quorum in degraded state

When FSW later goes down ‚Üí quorum lost, even though both nodes are up

üß™ Check:

powershell
Copy
Edit
(Get-Cluster).DynamicQuorum
(Get-ClusterNode).DynamicWeight
If a node‚Äôs DynamicWeight = 0, it's temporarily excluded from quorum.

3. Cluster Configuration: Quorum Mode / Witness Misconfiguration
The cluster might be configured with static quorum or set to require the witness to maintain quorum.

üß™ Check:

powershell
Copy
Edit
Get-ClusterQuorum
It will return something like:

text
Copy
Edit
ClusterQuorumType      ResourceName       QuorumResource
-------------------    ---------------    ---------------------
NodeAndFileShareMajority   File Share Witness  \\fsw\quorum
‚úÖ Expected: It says ‚ÄúNodeAndFileShareMajority‚Äù
‚ùå If it says anything else (like FileShareMajority with only 1 voting node), then that‚Äôs a problem.

üîß Recommended Action Steps
Confirm that both nodes are voting members (NodeWeight = 1)

Check if DynamicWeight for both nodes is 1

Review Get-ClusterQuorum to make sure FSW is not required

Optionally, disable dynamic quorum for testing:

powershell
Copy
Edit
(Get-Cluster).DynamicQuorum = 0
Final Thought
Yes ‚Äî just because both nodes can communicate doesn‚Äôt always mean they are actively voting in the cluster‚Äôs view. Something as small as a transient delay or missed heartbeat can shift quorum membership unexpectedly.

If you want, paste the output of:

powershell
Copy
Edit
Get-ClusterNode | Select Name, State, NodeWeight, DynamicWeight
Get-ClusterQuorum
and I can help interpret it.
